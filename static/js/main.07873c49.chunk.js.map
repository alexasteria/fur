{"version":3,"sources":["components/map.js","components/add.js","App.js","index.js"],"names":["Mapmap","props","state","lat","lng","style","height","width","Map","position","zoom","center","this","coords","latitude","longitude","TileLayer","url","CircleMarker","React","Component","MapComponent","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Add","Fragment","separator","size","name","value","description","defaultChecked","header","mode","before","App","useState","activeStory","setActiveStory","tabbar","onClick","selected","data-story","text","id","activePanel","bridge","send","ReactDOM","render","document","getElementById"],"mappings":"6lBAKMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,IAAK,WACLC,IAAK,YAJM,E,kGAYf,OACI,yBAAKC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,SACjC,kBAACC,EAAA,EAAD,CACIH,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQE,SAAU,YAClDC,KAAM,GACNC,OAAQ,CAACC,KAAKX,MAAMY,OAASD,KAAKX,MAAMY,OAAOC,SAAW,WAAYF,KAAKX,MAAMY,OAASD,KAAKX,MAAMY,OAAOE,UAAY,aACxH,kBAACC,EAAA,EAAD,CAAWC,IAAI,sDACf,kBAACC,EAAA,EAAD,CACIP,OAAQ,CAACC,KAAKX,MAAMY,OAASD,KAAKX,MAAMY,OAAOC,SAAW,WAAYF,KAAKX,MAAMY,OAASD,KAAKX,MAAMY,OAAOE,UAAY,oB,GArB3HI,IAAMC,WAoCZC,EAPMC,qBAAW,CAC5BC,gBAAiB,CACbC,oBAAoB,GAExBC,oBAAqB,KAJJH,CAKlBtB,G,iBCJY0B,EA9BH,WACR,OACI,kBAAC,IAAMC,SAAP,KACA,kBAAC,IAAD,CAAOC,UAAU,QACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,KAAK,KACP,yBAAKxB,MAAO,CAAEC,OAAQ,OAE1B,kBAAC,IAAD,CAAMuB,KAAK,KACP,yBAAKxB,MAAO,CAAEC,OAAQ,OAE1B,kBAAC,IAAD,CAAMuB,KAAK,KACP,yBAAKxB,MAAO,CAAEC,OAAQ,SAI9B,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,CAAOwB,KAAK,QAAQC,MAAM,IAAIC,YAAY,6CAAUC,gBAAc,GAAlE,2GACA,kBAAC,IAAD,CAAOH,KAAK,QAAQC,MAAM,IAAIC,YAAY,4EAA1C,+CACA,kBAAC,IAAD,CAAOF,KAAK,QAAQC,MAAM,IAAIC,YAAY,oIAA1C,oHAGR,kBAAC,IAAD,CAAOE,OAAQ,kBAAC,IAAD,CAAQC,KAAK,aAAb,wHACX,kBAAC,IAAD,CAAYC,OAAQ,kBAAC,IAAD,OAApB,mGCgBDC,EAnCH,WAAO,IAAD,EACqBC,mBAAS,OAD9B,mBACVC,EADU,KACGC,EADH,KAEjB,OACC,kBAAC,IAAD,CAAMD,YAAaA,EAAaE,OAC/B,kBAAC,IAAD,KACC,kBAAC,IAAD,CACCC,QAAS,kBAAIF,EAAe,QAC5BG,SAA0B,QAAhBJ,EACVK,aAAW,MACXC,KAAK,kCACL,kBAAC,IAAD,OACD,kBAAC,IAAD,CACCH,QAAS,kBAAIF,EAAe,QAC5BG,SAA0B,QAAhBJ,EACVK,aAAW,MACXC,KAAK,oDACL,kBAAC,IAAD,SAGF,kBAAC,IAAD,CAAMC,GAAG,MAAMC,YAAY,OAC1B,kBAAC,IAAD,CAAOD,GAAG,OACT,kBAAC,IAAD,uCACA,kBAAC,EAAD,QAGF,kBAAC,IAAD,CAAMA,GAAG,MAAMC,YAAY,OAC1B,kBAAC,IAAD,CAAOD,GAAG,OACT,kBAAC,IAAD,yDACA,kBAAC,EAAD,UC9BLE,IAAOC,KAAK,gBAEZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.07873c49.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, CircleMarker, TileLayer } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport {geolocated} from 'react-geolocated';\r\n\r\nclass Mapmap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lat: 56.2558114,\r\n            lng: 43.3155113\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ height: \"100%\", width: \"100%\" }}>\r\n                <Map\r\n                    style={{ height: \"100%\", width: \"100%\", position: 'absolute'}}\r\n                    zoom={12}\r\n                    center={[this.props.coords ? this.props.coords.latitude : 56.2558114, this.props.coords ? this.props.coords.longitude : 43.3155113]}>\r\n                    <TileLayer url=\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                    <CircleMarker\r\n                        center={[this.props.coords ? this.props.coords.latitude : 56.2558114, this.props.coords ? this.props.coords.longitude : 43.3155113]}\r\n                    />\r\n                </Map>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst MapComponent = geolocated({\r\n    positionOptions: {\r\n        enableHighAccuracy: false,\r\n    },\r\n    userDecisionTimeout: 5000,\r\n})(Mapmap);\r\n\r\nexport default MapComponent;","import React, { useState, useEffect } from 'react';\r\nimport {CardGrid, Card, Group, FormLayout, Radio, Header, CellButton} from '@vkontakte/vkui';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport App from \"../App\";\r\n\r\nconst Add = () => {\r\n    return (\r\n        <React.Fragment>\r\n        <Group separator=\"hide\">\r\n            <CardGrid>\r\n                <Card size=\"s\">\r\n                    <div style={{ height: 96 }} />\r\n                </Card>\r\n                <Card size=\"s\">\r\n                    <div style={{ height: 96 }} />\r\n                </Card>\r\n                <Card size=\"s\">\r\n                    <div style={{ height: 96 }} />\r\n                </Card>\r\n            </CardGrid>\r\n        </Group>\r\n            <FormLayout>\r\n                <div>\r\n                    <Radio name=\"radio\" value=\"1\" description=\"Тренога\" defaultChecked>Передвижная камера</Radio>\r\n                    <Radio name=\"radio\" value=\"2\" description=\"Стационарный\">Пост ДПС</Radio>\r\n                    <Radio name=\"radio\" value=\"3\" description=\"Проверки и спецоперации\">Мобильная группа ДПС</Radio>\r\n                </div>\r\n            </FormLayout>\r\n            <Group header={<Header mode=\"secondary\">Завершите добавление</Header>}>\r\n                <CellButton before={<Icon24Add />}>Добавить на карту</CellButton>\r\n            </Group>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default Add;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, Panel, PanelHeader, Epic, Tabbar, TabbarItem } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\nimport MapComponent from './components/map';\nimport Add from './components/add';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nconst App = () => {\n\tconst [activeStory, setActiveStory] = useState(\"map\");\n\treturn (\n\t\t<Epic activeStory={activeStory} tabbar={\n\t\t\t<Tabbar>\n\t\t\t\t<TabbarItem\n\t\t\t\t\tonClick={()=>setActiveStory('map')}\n\t\t\t\t\tselected={activeStory === 'map'}\n\t\t\t\t\tdata-story=\"map\"\n\t\t\t\t\ttext=\"Карта\"\n\t\t\t\t><Icon28Search /></TabbarItem>\n\t\t\t\t<TabbarItem\n\t\t\t\t\tonClick={()=>setActiveStory('add')}\n\t\t\t\t\tselected={activeStory === 'add'}\n\t\t\t\t\tdata-story=\"add\"\n\t\t\t\t\ttext=\"Добавить\"\n\t\t\t\t><Icon28AddOutline /></TabbarItem>\n\t\t\t</Tabbar>\n\t\t}>\n\t\t\t<View id=\"map\" activePanel=\"map\">\n\t\t\t\t<Panel id=\"map\">\n\t\t\t\t\t<PanelHeader>Карта</PanelHeader>\n\t\t\t\t\t<MapComponent/>\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t\t<View id=\"add\" activePanel=\"add\">\n\t\t\t\t<Panel id=\"add\">\n\t\t\t\t\t<PanelHeader>Добавить</PanelHeader>\n\t\t\t\t\t<Add/>\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t</Epic>\n\t);\n};\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}